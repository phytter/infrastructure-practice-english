name: Terraform Apply
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
jobs:
  terraform-apply:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}
    env:
      AWS_REGION: us-east-1
      ENVIRONMENT: ${{ inputs.environment }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.11.2'
          terraform_wrapper: false

      - name: Terraform Initialize
        run: |
          terraform init

      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan

      - name: Terraform Apply
        run: |
          terraform workspace select $ENVIRONMENT
          terraform apply -auto-approve tfplan

          if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
            # Get the ASG name
            ASG_NAME=$(terraform output -raw backend_autoscaling_group_name)
            # Refresh instances to use the new image
            aws autoscaling start-instance-refresh --auto-scaling-group-name $ASG_NAME
          fi
